using System;
using System.Collections.Generic;
using System.Text;
using System.Drawing;
using System.Windows.Forms;
using System.ComponentModel;

namespace Blue.Airport.Win.Lib
{
    partial class frmMain
    {
        private void InitializeComponent()
        {
            this.components = new Container();
            DataGridViewCellStyle style = new DataGridViewCellStyle();
            ComponentResourceManager manager = new ComponentResourceManager(typeof(frmMain));
            this.sysMenu = new MainMenu(this.components);
            this.mnFile = new MenuItem();
            this.mnImport = new MenuItem();
            this.mnEdit = new MenuItem();
            this.mnExport = new MenuItem();
            this.menuItem1 = new MenuItem();
            this.mnSelectAll = new MenuItem();
            this.mnQueue = new MenuItem();
            this.mnExcecuteQueue = new MenuItem();
            this.menuItem4 = new MenuItem();
            this.menuItem3 = new MenuItem();
            this.mnManageQueue = new MenuItem();
            this.menuItem2 = new MenuItem();
            this.mnConfig = new MenuItem();
            this.mnConfigDB = new MenuItem();
            this.txtsql = new TextBox();
            this.openImpDialog = new OpenFileDialog();
            this.resDataGridView = new DataGridView();
            ((ISupportInitialize)this.resDataGridView).BeginInit();
            base.SuspendLayout();
            this.sysMenu.MenuItems.AddRange(new MenuItem[] { this.mnFile, this.mnEdit, this.mnQueue, this.mnConfig });
            this.mnFile.Index = 0;
            this.mnFile.MenuItems.AddRange(new MenuItem[] { this.mnImport });
            this.mnFile.Text = "文件(&F)";
            this.mnImport.Index = 0;
            this.mnImport.Shortcut = Shortcut.F1;
            this.mnImport.Text = "导入源文件(&I)...";
            this.mnImport.Click += new EventHandler(this.mnImport_Click);
            this.mnEdit.Index = 1;
            this.mnEdit.MenuItems.AddRange(new MenuItem[] { this.mnExport, this.menuItem1, this.mnSelectAll });
            this.mnEdit.Text = "编辑(&E)";
            this.mnExport.Enabled = false;
            this.mnExport.Index = 0;
            this.mnExport.Shortcut = Shortcut.CtrlC;
            this.mnExport.Text = "复制(&C)";
            this.mnExport.Click += new EventHandler(this.mnExport_Click);
            this.menuItem1.Index = 1;
            this.menuItem1.Text = "-";
            this.mnSelectAll.Index = 2;
            this.mnSelectAll.Shortcut = Shortcut.CtrlA;
            this.mnSelectAll.Text = "全选(&A)";
            this.mnSelectAll.Click += new EventHandler(this.mnSelectAll_Click);
            this.mnQueue.Index = 2;
            this.mnQueue.MenuItems.AddRange(new MenuItem[] { this.mnExcecuteQueue, this.menuItem4, this.menuItem3, this.mnManageQueue, this.menuItem2 });
            this.mnQueue.Text = "查询(&R)";
            this.mnExcecuteQueue.Index = 0;
            this.mnExcecuteQueue.Text = "运行查询(&E)";
            this.mnExcecuteQueue.Click += new EventHandler(this.mnExcecuteQueue_Click);
            this.menuItem4.Enabled = false;
            this.menuItem4.Index = 1;
            this.menuItem4.Shortcut = Shortcut.F2;
            this.menuItem4.Text = "统计查询(&S)";
            this.menuItem4.Click += new EventHandler(this.menuItem4_Click);
            this.menuItem3.Index = 2;
            this.menuItem3.Text = "-";
            this.mnManageQueue.Index = 3;
            this.mnManageQueue.Text = "管理存储查询项(&M)...";
            this.mnManageQueue.Click += new EventHandler(this.mnManageQueue_Click);
            this.menuItem2.Index = 4;
            this.menuItem2.Text = "-";
            this.mnConfig.Index = 3;
            this.mnConfig.MenuItems.AddRange(new MenuItem[] { this.mnConfigDB });
            this.mnConfig.Text = "设置(&C)";
            this.mnConfigDB.Index = 0;
            this.mnConfigDB.Text = "数据库(&D)...";
            this.mnConfigDB.Click += new EventHandler(this.mnConfigDB_Click);
            this.txtsql.BorderStyle = BorderStyle.FixedSingle;
            this.txtsql.Dock = DockStyle.Top;
            this.txtsql.Location = new Point(0, 0);
            this.txtsql.Multiline = true;
            this.txtsql.Name = "txtsql";
            this.txtsql.ScrollBars = ScrollBars.Vertical;
            this.txtsql.Size = new Size(0x286, 60);
            this.txtsql.TabIndex = 1;
            this.txtsql.Text = "手动查询栏, 按F5执行";
            this.txtsql.KeyDown += new KeyEventHandler(this.txtsql_KeyDown);
            this.openImpDialog.Filter = "eTerm文本文件|*.txt";
            style.BackColor = Color.LightSteelBlue;
            this.resDataGridView.AlternatingRowsDefaultCellStyle = style;
            this.resDataGridView.Anchor = AnchorStyles.Right | AnchorStyles.Left | AnchorStyles.Bottom | AnchorStyles.Top;
            this.resDataGridView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
            this.resDataGridView.Location = new Point(6, 0x44);
            this.resDataGridView.Name = "resDataGridView";
            this.resDataGridView.RowTemplate.Height = 0x17;
            this.resDataGridView.Size = new Size(0x27b, 0x151);
            this.resDataGridView.TabIndex = 2;
            this.resDataGridView.Sorted += new EventHandler(this.resDataGridView_Sorted);
            this.resDataGridView.SelectionChanged += new EventHandler(this.resDataGridView_SelectionChanged);
            this.AutoScaleBaseSize = new Size(6, 14);
            this.BackColor = Color.White;
            base.ClientSize = new Size(0x286, 0x19b);
            base.Controls.Add(this.resDataGridView);
            base.Controls.Add(this.txtsql);
            //base.Icon = (Icon)manager.GetObject("$this.Icon");
            base.Menu = this.sysMenu;
            base.Name = "frmMain";
            base.StartPosition = FormStartPosition.CenterScreen;
            base.WindowState = FormWindowState.Maximized;
            base.Load += new EventHandler(this.frmMain_Load);
            ((ISupportInitialize)this.resDataGridView).EndInit();
            base.ResumeLayout(false);
            base.PerformLayout();
        }
    }
}
